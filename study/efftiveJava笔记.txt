1、当类的初始化参数太多并且是可选的时候，用Builder来代替构造方法；
2、单例设计模式可以采用enum来实现，做法是类内部创建一个枚举类，该枚举类持有一个静态的外部类对象，然后在构造器创建这个对象，因为JVM能保证enum的构造器只被调用一次，然后再提供个getInstance方法。而外部类则不需要持有静态对象，而是提供个getInstance方法返回这个枚举类持有的静态外部类对象。
3、把类的构造器私有化，并且在构造器里面抛出异常，可以防止类被实例化。而企图通过把类做成抽象类防止被实例来是行不通的，一方面可以通过子类来实例化，另一方面会误导用户以为这个类是用来继承的。
4、避免使用String s = new String("xxx");而应用用String s ="xxx"；同时其他与之相同的字符串都会==与它；
5、优先使用基本数据类型而不是使用装箱基本类型。
6、覆盖equals方法时也要覆盖hashCode方法。在Object的规范中只要两个对象equals返回true，那么hashCode也要相等。而equals返回false，则不一定hashCode要不相等。但是让hashCode不相等会提高散列集合的性能。
7、