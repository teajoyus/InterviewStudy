堆：
new的对象空间就放在堆上 缺点是，由于要在运行时动态分配内存，所以内存的存取速度较慢。
栈：
java的基本数据类型和引用类型就放在栈上  速度快

方法区：
用于储存已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据

常量池：
字符串、整数

栈的存取速度比堆要快，仅次于直接位于CPU中的寄存器；
栈是编译时分配空间的，而堆是动态分配（运行时分配空间），所以栈的速度快
而且CPU有一些寄存器可以直接操作栈，但是堆的话都说间接寻址的，就是到
在寄存器取出这个栈地址可以直接拿到值，但是堆是用间接寻址的，拿到这个地址后存的值才是堆的地址。
但是听说现在计算机存储结构的发展，貌似二者差异性越来越小了

发生OutOfMemoryError之前，JVM尝试垃圾回收释放空间，但是发现都是强引用不能释放，能释放的空间不足以用来存放目标对象
则就发生内存溢出了

StackOverflowError会出现的话一般是那些死循环递归吧，不断的死循环创建变量，却不能出栈，造成堆栈溢出


OutOfMemoryError内存溢出，我感觉最大的两个部分，一个是大量图片类的没及时回收处理，另外一个是Context被其他生命周期更长的强引用对象所持有
另外可能造成的还有比如 子线程太多、集合元素没有释放占用资源